import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import datetime

st.set_page_config(page_title="GPL Statistical Packages Comparison", layout="wide")

st.title("GPL-Licensed Statistical Packages: General And Time Series Features")

# Load data
df = pd.read_csv("data.csv")

features = ["ARIMA", "GARCH", "Unit Root", "Cointegration", "VAR", "Multivar GARCH"]

# Heatmap
heatmap_df = df.set_index("Software")[features]

heatmap_labels = heatmap_df.replace({1: "Yes", 0: "No"})

fig_heat = go.Figure(data=go.Heatmap(
    z=heatmap_df.values,
    x=features,
    y=heatmap_df.index,
    colorscale=['lightgray','green'],
    zmin=0, zmax=1,
    showscale=False,
    text=heatmap_labels.values,
    hoverinfo="text"
))
fig_heat.update_layout(title="Time Series Feature Support")

# Bar chart
df["Feature Count"] = df[features].sum(axis=1)
fig_bar = px.bar(df, x="Software", y="Feature Count",
                 title="Number of Time Series Features Supported",
                 color="Software")

# Scatter
current_year = datetime.datetime.now().year
df["Years Since Release"] = current_year - df["Latest Release Year"]

fig_scatter = px.scatter(
    df, x="Feature Count", y="Years Since Release",
    size="OS Count", color="Interface",
    hover_data=["Languages"],
    title="Features vs. Release Recency"
)

# General Info Table
table_fig = go.Figure(data=[go.Table(
    header=dict(values=["Software", "Latest Release Year", "OS Count", "Interface", "Languages"]),
    cells=dict(values=[df.Software, df["Latest Release Year"], df["OS Count"], df.Interface, df.Languages])
)])
table_fig.update_layout(title="General Information Summary")

# Layout in Streamlit
st.subheader("1. Heatmap of Time Series Support")
st.plotly_chart(fig_heat, use_container_width=True)

st.subheader("2. Features Count per Software")
st.plotly_chart(fig_bar, use_container_width=True)

st.subheader("3. Features vs Release Recency")
st.plotly_chart(fig_scatter, use_container_width=True)

st.subheader("4. General Information Table")
st.plotly_chart(table_fig, use_container_width=True)
